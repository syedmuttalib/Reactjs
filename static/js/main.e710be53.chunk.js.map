{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","brandname","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","class","onClick","toggleMode","role","htmlFor","defaultProps","about","TextForm","Text","SetText","useState","Fragment","style","color","heading","backgroundColor","value","onChange","event","console","log","target","rows","handleup","NewText","toUpperCase","ShowAlert","handleuplower","toLowerCase","handleCopy","textcopy","document","getElementById","select","navigator","clipboard","writeText","handlespaces","extratext","split","join","handleClear","length","Alert","alert","word","lower","charAt","slice","capitaize","msg","App","setmode","Setalert","message","setTimeout","body","title","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.e710be53.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\nconst Navbar = (props) => {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg  navbar-${props.mode} bg-${props.mode} `}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.brandname}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">{props.about}</a>\r\n              </li> */}\r\n            </ul>\r\n            <div class={`form-check form-switch  mx-4 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n              <input class=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label class=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n\r\n// required type \r\nNavbar.propTypes = {\r\n  brandname: PropTypes.string.isRequired,\r\n  about: PropTypes.string\r\n};\r\n\r\n//DEfault props\r\nNavbar.defaultProps = {\r\n  brandname: 'Set title here',\r\n  about: 'Set about here'\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nconst TextForm = (props) => {\r\n    const handleup=()=>{\r\n        console.log('Button Clicked!' + Text)\r\n        let NewText=Text.toUpperCase()\r\n        SetText(NewText)\r\n        props.ShowAlert(\"Converted to UpperCase\",\"success\")\r\n\r\n    }\r\n    const handleuplower=()=>{\r\n        console.log('Button Clicked!' + Text)\r\n        let NewText=Text.toLowerCase()\r\n        SetText(NewText)\r\n        props.ShowAlert(\"Converted to LowerCase\",\"success\")\r\n\r\n    }\r\n\r\n    const handleOnchange=(event)=>{\r\n        console.log(\"On changed\")\r\n        SetText(event.target.value)\r\n       \r\n    }\r\n    const handleClear=()=>{\r\n        // console.log(\"On changed\")\r\n        SetText(\"\")\r\n        props.ShowAlert(\"Text Cleared!\",\"success\")\r\n       \r\n    }\r\n    const handleCopy=()=>{\r\n        console.log(\"Copied!\")\r\n        let textcopy=document.getElementById('mybox')\r\n        textcopy.select();\r\n        navigator.clipboard.writeText(textcopy.value)\r\n        props.ShowAlert(\"Text Copied!\",\"success\")\r\n    }\r\n\r\n    const handlespaces=()=>{\r\n        console.log(\"clearTexted\")\r\n        let extratext=Text.split(/[ ]+/);\r\n        SetText(extratext.join(\" \"))\r\n        props.ShowAlert(\"Spaces Removed\",\"success\")\r\n    }\r\n\r\n\r\n    const [Text,SetText]=useState('Enter your text here')\r\n    return (\r\n        <>\r\n        <div className='container my-5'  style={{color:props.mode === 'dark' ? 'white' : '#09092b'}}>\r\n            <div className=\"mb-3\" >\r\n                <h1 >{props.heading}</h1>\r\n                <textarea className=\"form-control\" style={{backgroundColor:props.mode === 'dark' ? 'grey' : 'white', color:props.mode === 'dark' ? 'white' : '#09092b'}} value={Text} onChange={handleOnchange} id=\"mybox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\"\r\n            onClick={handleup}\r\n            >\r\n             Convert to uppercase\r\n            </button>\r\n\r\n            <button className=\"btn btn-primary mx-2\"\r\n            onClick={handleuplower}\r\n            >\r\n             Convert to Lowercase\r\n            </button>\r\n\r\n            <button className=\"btn btn-primary mx-2 my-3\"\r\n            onClick={handleCopy}\r\n            >\r\n             Copy Text\r\n            </button>\r\n            <button className=\"btn btn-primary mx-2\"\r\n            onClick={handlespaces}\r\n            >\r\n             Remove extra spaces\r\n            </button>\r\n\r\n            <button className=\"btn btn-primary mx-2\"\r\n            onClick={handleClear}\r\n            >\r\n             Clear Test\r\n            </button>\r\n        </div>\r\n        <div className=\"container my-4\" style={{color:props.mode === 'dark' ? 'white' : '#09092b'}}>\r\n        <h1>Your Text summary</h1>\r\n        <p>{Text.split(\" \").length } words and {Text.length} charecter</p>\r\n        <p>{0.008 * Text.split(\" \").length} Minitues to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{Text.length>0 ? Text:\"Enter something in the textbox above to preview it here\"}</p>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TextForm\r\n","import React from 'react'\r\n\r\nconst Alert = (props) => {\r\n    const capitaize =(word)=>{\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n     \r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitaize(props.alert.type)}</strong> {props.alert.msg}\r\n            </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\nimport {  useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React, { Component }  from 'react';  //extra line\n// import React from \"react\";\n// import {BrowserRouter ,Routes, Route} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light')\n  const [alert,Setalert]=useState(null)\n\n    // Alert function\n    const ShowAlert=(message,type)=>{\n      Setalert({\n        msg:message,\n        type:type\n      })\n      setTimeout(()=>{\n        Setalert(null)\n      },2000)\n    }\n\n  // Dark Mode function\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark')\n      document.body.style.backgroundColor = \"#09092b\"\n      ShowAlert(\"Dark mode has been enabled\",\"success\")\n      document.title='TextUtil-Dark Mode'\n    }\n    else {\n      setmode('light')\n      document.body.style.backgroundColor = \"white\"\n      ShowAlert(\"Light mode has been enabled\",\"success\")\n      document.title='TextUtil-light Mode'\n    }\n  }\n  return (\n    <>\n      <Navbar brandname=\"TextUtils2\" about=\"About\" mode={mode} toggleMode={toggleMode} /> \n      <Alert alert={alert} />\n      <div className=\"container\">\n        <TextForm ShowAlert={ShowAlert} heading=\"Enter the text to Analyse\" mode={mode}   />\n        {/* <About/> */}\n      </div>\n       </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}